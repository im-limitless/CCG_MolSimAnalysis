function InputFromRestart(Base, OutFldr, AtomList, CellInfo, ParsedLines)

FileName = [Base OutFldr '\' OutFldr '-1.restart'];
fidout = fopen(FileName, 'w');

fprintf(fidout,['# CP2K input file created by Matt Darby, Imperial College London for system ' OutFldr newline]);
fprintf(fidout,[' &GLOBAL' newline]);
fprintf(fidout,['   PRINT_LEVEL  LOW' newline]);
fprintf(fidout,['   PROJECT_NAME ' OutFldr newline]);
fprintf(fidout,['   RUN_TYPE  ENERGY_FORCE' newline]);
fprintf(fidout,['   WALLTIME 1600' newline]);
fprintf(fidout,[' &END GLOBAL' newline]);
fprintf(fidout,[' &FORCE_EVAL' newline]);
fprintf(fidout,['   METHOD  QS' newline]);
fprintf(fidout,['   &DFT' newline]);
fprintf(fidout,['     BASIS_SET_FILE_NAME ./GTH_BASIS_SETS' newline]);
fprintf(fidout,['     POTENTIAL_FILE_NAME ./GTH_POTENTIALS' newline]);
fprintf(fidout,['     &SCF' newline]);
fprintf(fidout,['       SCF_GUESS  RESTART' newline]);
fprintf(fidout,['       EPS_SCF     1.0E-05' newline]);
fprintf(fidout,['       MAX_SCF  800' newline]);
fprintf(fidout,['       EPS_DIIS     1.0E-01' newline]);
fprintf(fidout,['       &OT  T' newline]);
fprintf(fidout,['         MINIMIZER  DIIS' newline]);
fprintf(fidout,['         SAFE_DIIS  F' newline]);
fprintf(fidout,['         N_HISTORY_VEC  7' newline]);
fprintf(fidout,['         STEPSIZE     1.0000000000000001E-02' newline]);
fprintf(fidout,['         PRECONDITIONER  FULL_SINGLE_INVERSE' newline]);
fprintf(fidout,['         ENERGY_GAP     1.0000000000000000E-03' newline]);
fprintf(fidout,['       &END OT' newline]);
fprintf(fidout,['       &MIXING  T' newline]);
fprintf(fidout,['         METHOD  DIRECT_P_MIXING' newline]);
fprintf(fidout,['         ALPHA     3.000E-01' newline]);
fprintf(fidout,['       &END MIXING' newline]);
fprintf(fidout,['     &END SCF' newline]);
fprintf(fidout,['     &PRINT' newline]);
fprintf(fidout,['         &PDOS' newline]);
fprintf(fidout,['           NLUMO 1000' newline]);
fprintf(fidout,['         &END PDOS' newline]);
fprintf(fidout,['         &V_HARTREE_CUBE' newline]);
fprintf(fidout,['           STRIDE 1' newline]);
fprintf(fidout,['         &END V_HARTREE_CUBE' newline]);
fprintf(fidout,['         &TOT_DENSITY_CUBE' newline]);
fprintf(fidout,['           STRIDE 1' newline]);
fprintf(fidout,['         &END TOT_DENSITY_CUBE' newline]);
fprintf(fidout,['         &E_DENSITY_CUBE' newline]);
fprintf(fidout,['           STRIDE 1' newline]);
fprintf(fidout,['         &END E_DENSITY_CUBE' newline]);
fprintf(fidout,['     &END PRINT' newline]);
fprintf(fidout,['     &QS' newline]);
fprintf(fidout,['       EPS_DEFAULT     1.0E-10' newline]);
fprintf(fidout,['       EXTRAPOLATION  ASPC' newline]);
fprintf(fidout,['       EXTRAPOLATION_ORDER  0' newline]);
fprintf(fidout,['       METHOD  GPW' newline]);
fprintf(fidout,['     &END QS' newline]);
fprintf(fidout,['     &MGRID' newline]);
fprintf(fidout,['       NGRIDS  4' newline]);
fprintf(fidout,['       CUTOFF     3.0000000000000000E+02' newline]);
fprintf(fidout,['       &RS_GRID' newline]);
fprintf(fidout,['         DISTRIBUTION_TYPE  REPLICATED' newline]);
fprintf(fidout,['       &END RS_GRID' newline]);
fprintf(fidout,['     &END MGRID' newline]);
fprintf(fidout,['     &XC' newline]);
fprintf(fidout,['       DENSITY_CUTOFF     1.0000000000000000E-10' newline]);
fprintf(fidout,['       GRADIENT_CUTOFF     1.0000000000000000E-10' newline]);
fprintf(fidout,['       TAU_CUTOFF     1.0000000000000000E-10' newline]);
fprintf(fidout,['       &XC_FUNCTIONAL  NO_SHORTCUT' newline]);
fprintf(fidout,['         &PBE  T' newline]);
fprintf(fidout,['         &END PBE' newline]);
fprintf(fidout,['       &END XC_FUNCTIONAL' newline]);
fprintf(fidout,['       &VDW_POTENTIAL' newline]);
fprintf(fidout,['         POTENTIAL_TYPE  PAIR_POTENTIAL' newline]);
fprintf(fidout,['         &PAIR_POTENTIAL' newline]);
fprintf(fidout,['           R_CUTOFF     8.0000000000000000E+00' newline]);
fprintf(fidout,['           TYPE  DFTD3' newline]);
fprintf(fidout,['           PARAMETER_FILE_NAME ./dftd3.dat' newline]);
fprintf(fidout,['           REFERENCE_FUNCTIONAL PBE' newline]);
fprintf(fidout,['           EPS_CN     1.0000000000000000E-02' newline]);
fprintf(fidout,['           CALCULATE_C9_TERM  T' newline]);
fprintf(fidout,['           REFERENCE_C9_TERM  T' newline]);
fprintf(fidout,['           LONG_RANGE_CORRECTION  T' newline]);
fprintf(fidout,['         &END PAIR_POTENTIAL' newline]);
fprintf(fidout,['       &END VDW_POTENTIAL' newline]);
fprintf(fidout,['     &END XC' newline]);
fprintf(fidout,['     &REAL_TIME_PROPAGATION' newline]);
fprintf(fidout,['       INITIAL_WFN  SCF_WFN' newline]);
fprintf(fidout,['     &END REAL_TIME_PROPAGATION' newline]);
fprintf(fidout,['   &END DFT' newline]);
fprintf(fidout,['   &SUBSYS' newline]);
fprintf(fidout,['     &COORD' newline]);
for i = 1:length(AtomList)
    fprintf(fidout,[ParsedLines{AtomList(i)} newline]);
end
fprintf(fidout,['     &END COORD' newline]);
for i = 1:length(CellInfo)
    fprintf(fidout,[ParsedLines{CellInfo(i)} newline]);
end
fprintf(fidout,['     &KIND Pt' newline]);
fprintf(fidout,['       BASIS_SET TZV-GTH-LDA-q18-very-confined' newline]);
fprintf(fidout,['       ELEMENT Pt' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q18' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND PtE' newline]);
fprintf(fidout,['       BASIS_SET TZV-GTH-LDA-q18-very-confined' newline]);
fprintf(fidout,['       ELEMENT Pt' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q18' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND Ptb' newline]);
fprintf(fidout,['       BASIS_SET TZV-GTH-LDA-q18-very-confined' newline]);
fprintf(fidout,['       ELEMENT Pt' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q18' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND Pts' newline]);
fprintf(fidout,['       BASIS_SET TZV-GTH-LDA-q18-very-confined' newline]);
fprintf(fidout,['       ELEMENT Pt' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q18' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND Ptss' newline]);
fprintf(fidout,['       BASIS_SET TZV-GTH-LDA-q18-very-confined' newline]);
fprintf(fidout,['       ELEMENT Pt' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q18' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND H' newline]);
fprintf(fidout,['       BASIS_SET TZVP-GTH' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q1' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND O' newline]);
fprintf(fidout,['       BASIS_SET TZVP-GTH' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q6' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['     &KIND F' newline]);
fprintf(fidout,['       BASIS_SET TZVP-GTH' newline]);
fprintf(fidout,['       POTENTIAL GTH-PBE-q7' newline]);
fprintf(fidout,['     &END KIND' newline]);
fprintf(fidout,['   &END SUBSYS' newline]);
fprintf(fidout,[' &END FORCE_EVAL' newline]);
fprintf(fidout,['' newline]);

fclose(fidout);

copyfile(FileName, [Base OutFldr '\' OutFldr '.inp']);

return